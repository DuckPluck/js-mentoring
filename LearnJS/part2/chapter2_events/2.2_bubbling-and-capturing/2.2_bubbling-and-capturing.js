// https://learn.javascript.ru/bubbling-and-capturing

// Когда событие триггерится, оно проходит 3 фазы:
// 1. Погружение(захват) - событие идет сверху-вниз
// 2. Цель - событие достигло целевого эл-та и триггернуло его обработчик
// 3. Всплытие - событие идет снизу-вверх и триггерит обработчики эл-тов выше

// Узнать на какой фазе событие можно с помощью св-ва `event.eventPhase`


// Почти все события всплывают - существуют исключения: focus

// В ходе всплытия будут триггериться события разных эл-тов предков - чтобы получить к ним доступ - `this` или `event.currentTarget`.
// Чтобы узнать, на каком эл-те фактически произошло событие (целевой эл-т) - `event.target`
// Благодаря всплытию можно объединять разные эл-ты под одним родительским обработчиком


// Чтобы остановить всплытие - `event.stopPropagation()` (доделает все обработчики на текущем эл-те)
// Чтобы остановить всплытие, минуя все невыполненные обработчики на текущем эл-те - `event.stopImmediatePropagation()`
// (!) Лучше так не делать, скорее всего есть другие пути решения проблемы


// Чтобы поймать событие на стадии погружения (вместо всплытия), в event listener нужно добавить 3-ий аргумент - {capture: true}
elem.addEventListener('scroll', () => console.log(window.scrollY), {capture: true});

// Чтобы удалить event listener с `capture: true`, необходимо также указать 3-им аргументом {capture: true}